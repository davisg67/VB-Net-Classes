Imports Microsoft.VisualBasic
Imports System.Data.SqlClient
Imports System.Data
Imports ErrorHandling


Public Class Manufacturer
    Protected _ID As String = String.Empty
    Protected _MfrName As String = String.Empty

    Public ReadOnly Property ID_Field() As String
        Get
            Return _ID
        End Get
    End Property

    Public Property MfrName_Field() As String
        Get
            Return _MfrName
        End Get
        Set(value As String)
            _MfrName = value
        End Set
    End Property


    Public Function Init(ID As String) As String
        If Not IsNumeric(ID) Then
            ErrorHandler.WritelogFile("Global", "Manufacturer(class)", "Init", "The ID value sent was not a number.")
            Return "Error"
        End If

        Try
            Dim Result As String = String.Empty
            Dim conString = ConfigurationManager.ConnectionStrings("MSIUBDAPPCodeCon").ConnectionString
            Dim queryString = "SELECT * FROM p_manufacturer WHERE id = " & ID

            Dim connection As New SqlConnection(conString)

            Using (connection)
                Dim command = New SqlCommand(queryString, connection)
                connection.Open()
                Dim SQLreader As SqlDataReader = command.ExecuteReader()
                If SQLreader.HasRows Then
                    While (SQLreader.Read())
                        _ID = SQLreader("id")

                        If IsDBNull(SQLreader("mfr_name")) Then
                            _MfrName = String.Empty
                        Else
                            _MfrName = SQLreader("mfr_name")
                        End If

                    End While
                Else
                    Throw New Exception("Manufacturer ID was Not found!")
                End If
                
                connection.Close()
                Return "Success"
            End Using
        Catch ex As SqlException
            ErrorHandler.WritelogFile("Global", "Manufacturer(Class)", "Init()", ex.Message.ToString())
            Return "Error"
        Catch ex As Exception
            ErrorHandler.WritelogFile("Global", "Manufacturer(Class)", "Init()", ex.Message.ToString())
            Return "Error"
        End Try
    End Function

	
    Public Shared Function AddManufacturer(MfrName As String) As String
        Dim query As String = String.Empty
        query &= "INSERT INTO p_manufacturer (mfr_name) VALUES ('" & MfrName & "')"

        Dim constr As String = ConfigurationManager.ConnectionStrings("MSIUBDAPPCodeCon").ConnectionString
        Dim strBuf As String = String.Empty

        Try
            Using con As New SqlConnection(constr)
                Using cmd As New SqlCommand()
                    cmd.Connection = con
                    con.Open()

                    'cmd.CommandType = CommandType.StoredProcedure
                    cmd.CommandText = query

                    'Insert record
                    cmd.ExecuteNonQuery()

                    Return "Success"
                End Using
            End Using
        Catch ex As SqlException
            ErrorHandler.WritelogFile("Global", "Manufacturer(class)", "AddManufacturer", ex.Message.ToString())
            Return ex.Message.ToString()
        Catch ex As Exception
            ErrorHandler.WritelogFile("Global", "Manufacturer(class)", "AddManufacturer", ex.Message.ToString())
            Return ex.Message.ToString()
        End Try
    End Function

	
    Public Shared Function UpdateManufacturer(Name As String, MfrID As String) As String
        Dim query As String = "UPDATE p_manufacturer SET "
        query &= "mfr_name = @Name "
        query &= "WHERE id = " & MfrID


        Dim constr As String = ConfigurationManager.ConnectionStrings("MSIUBDAPPCodeCon").ConnectionString
        Using con As New SqlConnection(constr)
            Using cmd As New SqlCommand()
                Try
                    cmd.CommandText = query
                    cmd.Parameters.Add("@Name", SqlDbType.VarChar).Value = Name

                    cmd.Connection = con
                    con.Open()

                    'Update record
                    cmd.ExecuteNonQuery()

                    Return "Success"
                Catch ex As SqlException
                    ErrorHandler.WritelogFile("Global", "Manufacturer(Class)", "UpdateManufacturer()", ex.Message.ToString())
                    Return ex.Message.ToString()
                Catch ex As Exception
                    ErrorHandler.WritelogFile("Global", "Manufacturer(Class)", "UpdateManufacturer()", ex.Message.ToString())
                    Return ex.Message.ToString()
                End Try
            End Using
        End Using
    End Function


    Public Shared Function ManufacturerNameExist(Name As String) As String
        Dim Result As String = "no"

        Try
            Dim conString = ConfigurationManager.ConnectionStrings("MSIUBDAPPCodeCon").ConnectionString
            Dim queryString = "Select * FROM p_manufacturer WHERE LOWER(mfr_name) = '" & Name.ToLower() & "'"

            Using connection As New SqlConnection(conString)
                Dim command = New SqlCommand(queryString, connection)
                connection.Open()

                Using SQLreader As SqlDataReader = command.ExecuteReader()
                    If SQLreader.HasRows Then
                        Result = "yes"
                    End If

                    Return Result
                End Using
            End Using
        Catch ex As SqlException
            ErrorHandler.WritelogFile("WO", "Manufacturer(class)", "ManufacturerNameExist()", ex.Message.ToString())
            Return "Error"
        Catch ex As Exception
            ErrorHandler.WritelogFile("WO", "Manufacturer(class)", "ManufacturerNameExist()", ex.Message.ToString())
            Return "Error"
        End Try
    End Function

	
    Public Shared Function GetManufacturerName(ID As String) As String
        Dim Result As String = String.Empty

        If String.IsNullOrEmpty(ID) Then
            Throw New Exception("Manufacturer id is not numeric.")
            Return "Error"
        End If

        Try
            Dim conString = ConfigurationManager.ConnectionStrings("MSIUBDAPPCodeCon").ConnectionString
            Dim queryString = "SELECT id, mfr_name FROM p_manufacturer WHERE id = " & ID

            Using connection As New SqlConnection(conString)


                Dim command = New SqlCommand(queryString, connection)
                connection.Open()
                Using SQLreader As SqlDataReader = command.ExecuteReader()
                    If SQLreader.HasRows Then
                        While (SQLreader.Read())
                            Result = SQLreader("mfr_name").ToString()
                        End While
                    End If

                    Return Result
                End Using
            End Using
        Catch ex As SqlException
            ErrorHandler.WritelogFile("Global", "Manufacturer(Class)", "GetManufacturerName()", ex.Message.ToString())
            Return "Error"
        Catch ex As Exception
            ErrorHandler.WritelogFile("Global", "Manufacturer(Class)", "GetManufacturerName()", ex.Message.ToString())
            Return "Error"
        End Try
    End Function

End Class